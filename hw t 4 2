HW T 4 2 

  Задача 2. Пошук найдовшого спільного префікса

class TrieNode:
    def __init__(self):
        self.children = {}
        self.value = None

class Trie:
    def __init__(self):
        self.root = TrieNode()

    def put(self, word, value):
        node = self.root
        for char in word:
            if char not in node.children:
                node.children[char] = TrieNode()
            node = node.children[char]
        node.value = value

class LongestCommonWord(Trie):

    def find_longest_common_word(self, strings) -> str:
        if not isinstance(strings, list) or not all(isinstance(s, str) for s in strings):
            raise TypeError("Потрібно передати список рядків (list of str)")

        if not strings:
            return ""

        # Додаємо слова в Trie
        for i, word in enumerate(strings):
            self.put(word, i)

        # Пошук найдовшого спільного префікса
        prefix = ""
        node = self.root

        while True:
            if len(node.children) != 1 or node.value is not None:
                break
            char, next_node = next(iter(node.children.items()))
            prefix += char
            node = next_node

        return prefix

if __name__ == "__main__":
    # Тести
    trie = LongestCommonWord()
    strings = ["flower", "flow", "flight"]
    assert trie.find_longest_common_word(strings) == "fl"

    trie = LongestCommonWord()
    strings = ["interspecies", "interstellar", "interstate"]
    assert trie.find_longest_common_word(strings) == "inters"

    trie = LongestCommonWord()
    strings = ["dog", "racecar", "car"]
    assert trie.find_longest_common_word(strings) == ""

    trie = LongestCommonWord()
    strings = []
    assert trie.find_longest_common_word(strings) == ""

    trie = LongestCommonWord()
    strings = ["single"]
    assert trie.find_longest_common_word(strings) == "single"

    print("Усі тести пройдено успішно!")




Усі тести пройдено успішно!

  
